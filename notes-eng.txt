	Network Simulation Project Notes
	
	
General Description :

	The user opens the application window. The window is a terminal
	window where the user can enter some commands. Using these commands,
	the user can interact with a server that responds to the user's
	requests. This way, the user might use different apps that, actually,
	support multiple users.
	
	So, this app is like a regular system terminal application, but with
	emphasis on multiuser interaction.


General Goals :

	- For a given application, ability to use this application by many
	clients and so that a server would manage the app also. To start, this app
	might be a simple game;


Specific Goals :

	- Start with a single server. Let its command family call "srv".
	Then, we have these basic commands:
		- srv register <username>
		- srv login <username>
		- srv logout
		- srv signout/leave/unregister
	To implement usage the server by multiple users independently, we
	should make the server running in a separate thread and use a dispatcher
	that will manage user requests and server responses through some queus;
	- [UI] When pressing Up/Down arrow keys, user should see commands he's
	entered before. These user inputs should be saved across executions;
	- [UI] When pressing Ctrl-W, the current word, i.e. one the caret is on,
	should be removed;
	- fix bugs;
	- [func] Implement 'simulation' module that is needed for simulating
	presence of several users, which would be able to use the server at the
	same time;
	- [func] Implement short messages exchange between users;
	- [func]? Implement chat (as a server service, maybe), when users post
	messages and all other users (from the same 'group') can see it;
	- [UI] Make password input hidden, for example by putting '*' instead of
	letter and numeric symbols;
	
	
Bugs :
	- when the caret in the middle of the line being typed, and we press
	Enter, then the behaviour is incorrect;
